name: postman-ci

on:
  push:
    branches:
      - 'DEV'
  pull_request:   # // and pull_request
    branches:
      - 'DEV'

jobs:
  build: # job_id
    name: pushing new dev docker image on docker hub and deploy # job name
    runs-on: ubuntu-latest # hosted OS
    strategy:
      matrix:
        node-version: [12.x]

    steps:
      -
        name: Checkout 
        uses: actions/checkout@v2
      - name:  Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - 
        name: executing remote ssh commands for Postman deployment using ssh_key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST_DEV }}
          username: ${{ secrets.SSH_USERNAME_DEV }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT_DEV }}
          script: |
            cd /home/backadmin/SafeTel-Back/
            git checkout DEV
            git pull origin DEV
            cd devOps/cd/
            docker-compose pull magi_postman
            docker-compose up -d --force-recreate --no-deps --build magi_postman
            docker-compose up -d --force-recreate --no-deps --build clean_db_postman_force_now
            echo "y" | docker system prune

      - name: Install newman # installing newman, CLI to run postman tests
        run: |
          npm install -g newman
          npm install -g newman-reporter-htmlextra

      - name: Build the docker-compose of the project # running docker
        run: docker-compose up -d

      - name: Run POSTMAN collection with Postman env # running POSTMAN tests with postman-env
        run: |
          newman run https://api.getpostman.com/collections/13182887-93e525f5-4a5c-49f5-8fc1-7a4e62bad530?apikey=$API_KEY --environment https://api.getpostman.com/environments/13182887-0b3ed845-907b-418e-a771-70d268e7153d?apikey=$API_KEY
        env:
          API_KEY: ${{secrets.POSTMAN_API_KEY}}
